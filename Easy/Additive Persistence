# https://www.reddit.com/r/dailyprogrammer/comments/akv6z4/20190128_challenge_374_easy_additive_persistence/

# Three different ways


def add_persis(num):    # Recursively
    times = 0
    
    while True:
        
        x = [int(i) for i in str(num)]
        
        if sum(x) >= 10:
            times += 1
            num = sum(x)
            continue
        else:
            times += 1
            return times
            
add_persis(1234)

-----------------------------------------

def add_persis(num):   # No strings
    times = 0
    
    while True:
        
        y = sorted(list(set([num%(10**i) for i in range(1,10)])))
        
        z = [i//(10**j) if i >= 10 else i for j,i in enumerate(y)]
        
        if sum(z) >= 10 and times < 10:
            times += 1
            num = sum(z)
            continue
        else:
            times += 1
            return times
            
add_persis(1234)

-------------------------------------------

def add_persis(num):    # while loop
    global times
    times = 0
    
    def go(num1):
        global times
        
        x = [int(i) for i in str(num1)]
        
        if sum(x) >= 10:
            
            times += 1
            go(sum(x))
        
        else:
            times += 1
            print(times)
    go(num)
    
add_persis(1234)


'''
13 -> 1
1234 -> 2
9876 -> 2
199 -> 3
'''



